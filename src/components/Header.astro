---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:ebarronteodoro@gmail.com",
  },
]
---

<header
  class="fixed top-0 z-30 flex items-center justify-center w-full mx-auto mt-4 animate-fade-up"
>
  <nav
    class="flex px-3 text-sm md:gap-x-4 font-medium rounded-full text-slate-800/90 dark:text-indigo-50 justify-center items-center animate-nav-shadow"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition duration-300 text-center text-xs md:text-base hover:text-indigo-100/80 dark:hover:text-indigo-300"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-indigo-300")
            } else {
              item.classList.remove("text-indigo-300")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>